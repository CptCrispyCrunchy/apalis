ServiceFn<fn(TestJob, apalis::prelude::Data<Arc<AtomicUsize>>, apalis::prelude::Context) -> impl std::future::Future<Output = Result<(), apalis::prelude::Error>> {failing_job}, TestJob, NatsContext, _>
ServiceFn<fn(TestJob, apalis::prelude::Data<Arc<AtomicUsize>>, apalis::prelude::Context) -> impl std::future::Future<Output = Result<(), apalis::prelude::Error>> {failing_job}, TestJob, NatsContext, _>: tower_service::Service<apalis::prelude::Request<TestJob, NatsContext>>
apalis::prelude::WorkerBuilder<TestJob, NatsContext, NatsStorage<TestJob>, tower_layer::stack::Stack<apalis::prelude::Data<Arc<AtomicUsize>>, tower_layer::stack::Stack<ConcurrencyLimitLayer, tower_layer::identity::Identity>>, ServiceFn<fn(TestJob, apalis::prelude::Data<Arc<AtomicUsize>>, apalis::prelude::Context) -> impl std::future::Future<Output = Result<(), apalis::prelude::Error>> {failing_job}, TestJob, NatsContext, _>>
