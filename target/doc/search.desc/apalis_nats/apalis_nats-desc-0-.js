searchState.loadedDescShard("apalis_nats", 0, "apalis storage using NATS JetStream as a backend\nClient is a <code>Cloneable</code> handle to NATS connection. Client …\nConfiguration for NATS storage\nReturned when initial connection fails. To be enumerate …\nHigh priority jobs\nLow priority jobs\nMedium priority jobs\nNATS client error\nContext for NATS jobs\nNATS poll error\nQueue info for NATS\nNATS storage implementation\nPriority levels for jobs\nSerialization error\nStorage error\nAcknowledge the message as successfully processed\nAck wait time (how long to wait for a job to be …\nConnect to NATS\nReturns the current state of the connection.\nEnable dead letter queue\nEnable flow control for consumers\nFlushes the internal buffer ensuring that all messages are …\nForces the client to reconnect. Keep in mind that client …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns true if the server version is compatible with the …\nMaximum number of pending acknowledgments per consumer\nMaximum number of delivery attempts before moving to DLQ\nGet the underlying NATS message\nNegatively acknowledge the message for retry\nThe namespace for all streams (e.g., “apalis”)\nCreate a new NATS storage instance\nCreate a new globally unique inbox which can be used for …\nCreate a new NATS storage instance with custom config\nNumber of replicas for streams\nNumber of pending messages\nRequest progress update (extends ack wait time)\nPublish a Message to a given subject.\nPublish a Message with headers to a given subject.\nPublish a Message to a given subject, with specified …\nPublish a Message to a given subject with headers and …\nPush a job with a specific priority\nSubscribes to a subject with a queue group to receive …\nSends the request with headers.\nSends the request with headers.\nSends the request created by the Request.\nReturns last received info from the server.\nThe stream name\nSubscribes to a subject to receive messages.\nTerminate processing (send to DLQ if configured)\nCreate a new context with a message")